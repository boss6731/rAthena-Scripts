//===== rAthena Script =======================================
//= MvP Ranker with Shop		GPT 翻譯 =============
//===== By ===================================================
//= llchrisll
//===== Version ==============================================
//= 1.0 - Initial Version
//= 1.1 - Fixed Ranking Display
//      - Exchanged .mvp_ with $@mvp_ variables
//      - Modified OnMvPCardUnlock to be a function
//      - Added freeloop(); to prevent infinite loop <<----- DON'T NEED ANY freeloop
//= 1.2 - Improved by AnnieRuru <3
//===== Tested With ==========================================
//= rAthena 03/26/2018 Revision
//= GIT Hash: 333f0dddc8353663eacba0423751988c9bc38e34
//===== Description ==========================================
//= MvP Ranking with MvP Card Shop as soon as the Goal Points of
//  respective MvP has been reached.
//= Automatic detection of MvPs hunting state and addition of MvP Card
//  into the Shop.
//= Top 10 Ranking
//= List of MvP Goals
//= Price per MvP Card = Goal Points/4
//===== Request ==============================================
//= by Radian (https://rathena.org/board/profile/27689-radian/)
//= Topic: https://rathena.org/board/topic/115216-mvp-ranker-w-rewards/
//===== SQL Tables ===========================================
/* SQL Tables:
CREATE TABLE `mvp_rank` (
 `char_id` int(11) unsigned NOT NULL,
 `char_name` varchar(30) NOT NULL default 'Unknown',
 `mvp_points` int(11) default '0',
PRIMARY KEY ( `char_id` ),
KEY (`mvp_points`)
 ) ENGINE=MyISAM;
 
CREATE TABLE `mvp_goal` (
 `mvp_id` smallint(5) unsigned NOT NULL,
 `goal_points` int(11) default '4',
 `goal_needed` int(11) default '4',
 `mvp_card` smallint(5) unsigned NOT NULL,
PRIMARY KEY ( `mvp_id` )
 ) ENGINE=InnoDB;
*/
//============================================================
poring_w01,100,100,4	script	MvP Ranker	102,{

	mes .n$;
	mes "我可以為您做什麼？";
	next;
	switch(select("- 伺服器排名","- MVP 目標","- 打開 MVP 商店:- 沒事")) {

	case 1:
		mes .n$;
		mes "我現在將列出前 10 名的 MVP 獵人：";
		next;
		mes "[ 前 10 名 MVP 獵人 ]";
		if ( !( .@nb = query_sql( "SELECT `char_name` , `mvp_points` FROM `mvp_rank` ORDER BY `mvp_points` DESC LIMIT 10;", .@c_name$, .@mvp_pts ) ) ) {
			mes "目前沒有玩家排名。";
			mes "稍後再來看看吧。";
			close;
		}
		for ( .@i = 0; .@i < .@nb; ++.@i )
			mes ( .@i +1 )+". "+ .@c_name$[.@i] +" - "+ .@mvp_pts[.@i] +" 點";
		close;
	
	case 2:
		mes .n$;
		mes "這是 MVP 的目標點數清單：";
		mes " ";
		mes "> MVP / 所需 / 目前";
		.@nb = query_sql( "SELECT `mvp_id` , `goal_points`, `goal_needed` FROM `mvp_goal`", .@mvp_id, .@goal_pts, .@need_goal );
		for ( .@i = 0; .@i < .@nb; ++.@i )
			mes "> "+ getmonsterinfo(.@mvp_id[.@i], MOB_NAME) +" / "+ .@need_goal[.@i] +" / "+( .@goal_pts[.@i] ? .@goal_pts[.@i] : "已解鎖" );
		close;
	
	case 3:
		mes .n$;
		if(!MVPPOINTS) {
			mes "抱歉，您必須至少擊殺 1 個 MVP 才能進入 MVP 商店。";
			close;
		}
		mes "您當前的 MVP 點數："+MVPPOINTS;
		if(!.shop_card_total) { // 避免打開空商店
			mes "抱歉，目前還沒有可用的卡片。";
			mes "先擊殺其中一個 MVP，直到達成其目標！";
			close;
		}
		mes "我現在將打開商店。";
		close2;
		callshop "MvPRankShop",1;
		npcshopattach "MvPRankShop";
		end;	
	
	case 4:
		close;
	}
	end;

OnInit:
	set .n$,"["+strnpcinfo(1)+"]";
	// 要獵殺的 MVP ID：
	// 將每個要獵殺的 MVP ID 放在這裡
		setarray .mvp_id[0],
			1511,	// Amonra
			1785,	// Atroce
			1630,	// Bacsojin
			1039,	// Baphomet
			1272,	// Dark Lord
			// 更多的 MVP ID...
			1658;
	
	// MVP 卡片 ID
	// 以 SQL 命令建立

	set .mvp_id_size, getarraysize( .mvp_id );

	// 所需的目標點數
	//	setarray .mvp_goal[0],4,4,4,4,4;
	cleararray .mvp_goal, 4, .mvp_id_size; // 改回 setarray


	// 自動檢查現有的資料庫項目
	for ( .@i = 0; .@i < .mvp_id_size; ++.@i )
		.@values$[.@i] = "SELECT "+ .mvp_id[.@i] +" AS MVPID, "+ .mvp_goal[.@i] +", "+ .mvp_goal[.@i] +", ( SELECT `DropCardid` FROM `"+( checkre(0)? "mob_db_re" : "mob_db" )+"` where ID = MVPID )";
	if ( .mvp_id_size )
		query_sql "INSERT IGNORE INTO `mvp_goal` ( `mvp_id`, `goal_points`, `goal_needed`, `mvp_card` ) "+ implode( .@values$, " UNION " );

	// 自動檢查如果不再獵殺 MVP：
	// 它檢查 MVP 是否在 .mvp_id 陣列中，如果不是，則從資料庫中刪除它
	// 注意：請注意，獲得的目標點數將不會保存在任何地方供以後使用！
	for ( .@i = 0; .@i < .mvp_id_size; ++.@i )
		.@where_clause$[.@i] = "`mvp_id` != "+ .mvp_id[.@i];
	if ( .mvp_id_size )
		query_sql "DELETE FROM `mvp_goal` WHERE "+ implode( .@where_clause$, " AND " );
	else
		query_sql "TRUNCATE TABLE `mvp_goal`";

	npcshopdelitem "MvPRankShop", 501;
	if ( ( .shop_card_total = query_sql( "SELECT `mvp_card`, `goal_needed` FROM `mvp_goal` WHERE `goal_points` = 0", .@mvpcard, .@need_goal ) ) ) {
		for ( .@i = 0; .@i < .shop_card_total; ++.@i ) {
			npcshopadditem "MvPRankShop", .@mvpcard[.@i], .@need_goal[.@i] /4;
			.shop_card_id[.@i] = .@mvpcard[.@i];
			.shop_goal[.@i] = .@need_goal[.@i] /4;
		}
	}
	end;

OnNPCKillEvent:
	if ( !getmonsterinfo( killedrid, MOB_MVPEXP ) ) end;

	if ( !query_sql( "SELECT `goal_points`, `goal_needed`, `mvp_card` FROM `mvp_goal` WHERE `mvp_id` = "+ killedrid, .@goal, .@need_goal, .@mvpcard ) )
		end; // 如果 killedrid 是 MVP 但不是 mvp_goal ...

	if ( .@goal )
		query_sql "UPDATE `mvp_goal` SET `goal_points` = `goal_points` - 1 WHERE `mvp_id` = "+ killedrid;
	if ( .@goal -1 == 0 ) {
		announce "[ MVP 排名者 ]："+ strcharinfo(0) +" 已完成 ["+ getmonsterinfo( killedrid, MOB_NAME ) +"] 的最後擊殺，該怪物卡現在可以在商店購買！", bc_all;
		npcshopadditem "MvPRankShop", .@mvpcard, .@need_goal /4;
		.shop_card_id[.shop_card_total] = .@mvpcard[.@i];
		.shop_goal[.shop_card_total] = .@need_goal[.@i] /4;
		++.shop_card_total;
	}

	if ( !getcharid(1) ) {
		++MVPPOINTS;
		query_sql "INSERT INTO `mvp_rank` ( `char_id`, `char_name`, `mvp_points` ) VALUES ( "+ getcharid(0) +", '"+ escape_sql( strcharinfo(0) ) +"', 1 ) ON DUPLICATE KEY UPDATE `mvp_points` = `mvp_points` +1;";
	}
	else {
		// *addrid is evil XD
		.@map$ = strcharinfo(3);
		getpartymember getcharid(1), 1;
		getpartymember getcharid(1), 2;
		for ( .@i = 0; .@i < $@partymembercount; ++.@i ) {
			if ( isloggedin( $@partymemberaid[.@i], $@partymembercid[.@i] ) ) {
				attachrid $@partymemberaid[.@i];
				if ( strcharinfo(3) == .@map$ ) { // 只有同地圖的人
					++MVPPOINTS;
					message strcharinfo(0), .n$ +": 你因擊殺 "+ getmonsterinfo( killedrid, MOB_NAME ) +" 獲得 1 點 MVP 點數！";
					.@cid[.@count] = $@partymembercid[.@i];
					.@name$[.@count] = strcharinfo(0);
					++.@count;
				}
			}
		}
		for ( .@i = 0; .@i < .@count; ++.@i )
			.@values$[.@i] = "( "+ .@cid[.@i] +", '"+ escape_sql( .@name$[.@i] ) +"', 1 )";
		query_sql "INSERT INTO `mvp_rank` ( `char_id`, `char_name`, `mvp_points` ) VALUES "+ implode( .@values$, ", " ) +" ON DUPLICATE KEY UPDATE `mvp_points` = `mvp_points` +1;";
	}
	end;

OnBuyItem:
	if ( checkweight2( @bought_nameid, @bought_quantity ) == false ) {
		dispbottom .n$+": 抱歉，您的物品欄沒有足夠的空間來接收這些物品。";
		end;
	}

	.@item_bought = getarraysize( @bought_nameid );
	for ( .@i = 0; .@i < .@item_bought; ++.@i )
		for ( .@j = 0; .@j < .shop_card_total; ++.@j )
			if ( @bought_nameid[.@i] == .shop_card_id[.@j] )
				.@total += .shop_goal[.@j] * @bought_quantity[.@i];

	if ( .@total > MVPPOINTS ) {
		dispbottom .n$+": 抱歉，您的 MVP 點數不足以購買這些卡片。";
		end;
	}
	MVPPOINTS -= .@total;
	for ( .@i = 0; .@i < .@item_bought; ++.@i )
		getitem @bought_nameid[.@i], @bought_quantity[.@i];
	end;
}

-	shop	MvPRankShop	-1,501:-1
